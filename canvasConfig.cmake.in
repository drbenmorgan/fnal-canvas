# - canvasConfig Template file

# - May not need this variable as versioning file
# holds details, but seems to be convention
set(canvas_VERSION @canvas_VERSION@)

#-----------------------------------------------------------------------
# - CMakePackageConfigHelpers Startup...
@PACKAGE_INIT@
#-----------------------------------------------------------------------
# - CMakePackageConfigHelpers End...

# Don't *strictly* need include dir(s) as linking to canvas lib
# targets will propagate all needed requirements. However, it's
# useful if we're using header-only parts and don't want to
# have a binary linkage.
set_and_check(canvas_INCLUDE_DIR "@PACKAGE_CMAKE_INSTALL_INCLUDEDIR@")

# - When needed, refind needed targets here
# - Assert EXACT version as this is default behaviour of UPS setups.
find_package(Boost @Boost_MAJOR_VERSION@.@Boost_MINOR_VERSION@ EXACT REQUIRED)
# - CLHEP may need additional work to support include dirs...
find_package(CLHEP @CLHEP_VERSION@ EXACT REQUIRED)
find_package(SQLite @SQLite_VERSION@ EXACT REQUIRED)
find_package(ROOT @ROOT_VERSION@ EXACT REQUIRED)
find_package(cetlib @cetlib_VERSION@ EXACT REQUIRED)
find_package(fhiclcpp @fhiclcpp_VERSION@ EXACT REQUIRED)
find_package(messagefacility @messagefacility_VERSION@ EXACT REQUIRED)
find_package(TBB @TBB_VERSION_MAJOR@.@TBB_VERSION_MINOR@ EXACT REQUIRED)

# - Include our targets
include("${CMAKE_CURRENT_LIST_DIR}/canvasTargets.cmake")

# - Include modules for required tools
list(INSERT CMAKE_MODULE_PATH 0 "${CMAKE_CURRENT_LIST_DIR}")
include(ArtDictionary)

